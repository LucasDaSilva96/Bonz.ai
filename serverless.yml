# "org" ensures this Service is used with the correct Serverless Framework Access Key.

org: ${env:ORG}

# "service" is the name of this project. This will also be added to your AWS resource names.
service: bonz-ai

useDotenv: true

plugins:
  - serverless-dotenv-plugin

provider:
  name: aws
  runtime: nodejs20.x
  region: eu-north-1
  stage: dev
  iam:
    role:
      statements:
        - Effect: 'Allow'
          Action:
            - dynamodb:Query
            - dynamodb:Scan
            - dynamodb:GetItem
            - dynamodb:PutItem
            - dynamodb:UpdateItem
            - dynamodb:DeleteItem
          Resource: '*'

build:
  esbuild:
    minify: true

package:
  individually: true

functions:
  overview:
    handler: functions/overview/index.handler
    events:
      - httpApi:
          path: /overview
          method: get

  booking:
    handler: functions/booking/index.handler
    events:
      - httpApi:
          path: /booking
          method: post

  deleteBooking:
    handler: functions/deleteBooking/index.handler
    events:
      - httpApi:
          path: /deleteBooking/{id}
          method: post

  updateBooking:
    handler: functions/updateBooking/index.handler
    events:
      - httpApi:
          path: /updateBooking/{id}
          method: put

  getBookingById:
    handler: functions/getBookingById/index.handler
    events:
      - httpApi:
          path: /getBookingById/{id}
          method: get

# Define the resources that this project will use. In this case, a DynamoDB table.
resources:
  Resources:
    BookingsDB:
      Type: AWS::DynamoDB::Table
      Properties:
        TableName: booking-db
        AttributeDefinitions:
          - AttributeName: id
            AttributeType: S
        KeySchema:
          - AttributeName: id
            KeyType: HASH # Partition key
        BillingMode: PAY_PER_REQUEST
